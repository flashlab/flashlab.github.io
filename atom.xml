<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J.F&#39;s BLOG</title>
  
  <subtitle>T.E.D</subtitle>
  <link href="https://blog.zzbd.org/atom.xml" rel="self"/>
  
  <link href="https://blog.zzbd.org/"/>
  <updated>2021-10-26T04:46:49.763Z</updated>
  <id>https://blog.zzbd.org/</id>
  
  <author>
    <name>J. F</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>盘古之白 - 如何更优雅地写 wiki</title>
    <link href="https://blog.zzbd.org/2021/10/26/wiki-pangu/"/>
    <id>https://blog.zzbd.org/2021/10/26/wiki-pangu/</id>
    <published>2021-10-26T09:10:31.000Z</published>
    <updated>2021-10-26T04:46:49.763Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/attach/sm.js"></script><link rel="stylesheet" type="text/css" href="/attach/sm.css"/><blockquote class="blockquote-center"><form class="sm-banner"><div><textarea id="typearea" class="text"></textarea> <br/><img data-src="/attach/tri.png" alt="off" id="img"/></div></form></blockquote><script type="text/javascript">type_text(new Array(        "",        "",        "",                        "中英文混排时 Space 很重要",        "不只是因为美观",        "还因为",        "对搜索引擎友好",        "",        "怎么做",        "插件可以帮忙",        "但更重要的是",        "习惯",        "",        "倡导盘古之白",        "让打字更愉悦",        "=^_^="    ));</script><span id="more"></span>用了一段时间 mediawiki，对自带的搜索还是不太满意，主要表现为：<ol><li>全文搜索的中文是按照单字分词，结果比较杂乱，同页面有多个匹配时预览显示不全就算了，有些页面一个都不显示。至今还没摸出规律</li><li>Cargo 的 drill 页的标题快速过滤对中文支持太差，英文也仅支持“单词样式”的（也即单词在标题头尾或者前后有空格）。这也是写这篇心得的主要原因</li><li>英文的全文搜索结果只有在“单词样式”下才比较直观</li><li>等了很久的elastic升级也没有什么进展</li></ol><p>所以改造之路就此开始，既然只能依赖简单粗暴的数据库搜索，规范化写作就是唯一一条路，其中最重要的要算 <strong>中英文混排用空格隔开</strong> 这一条。然后就发现了宝藏工具 <code>Pangu.js</code>。安装打包好的浏览器插件测试，功能比较简单，就一个按键，然后可以选择是否加载网页时自动排版。这个JS库针对的是纯文本或者html，不支持markdown以及其它标记型语言。最郁闷的是，VisualEditor 下基本不起作用。</p><p>然后就找到了一个用了 <code>Panju.js</code> 的 wiki 站，移植过来，感觉有戏。最初的设想是通过组合快捷键触发 JS 读取选中文本，格式化好之后写入剪切板，前端显示通知然后手动粘贴。想法很美好，然而就在快完工时突然意识到一个严重漏洞：这个只针对纯文本的内容好使，碰到带格式的这么一转换肯定撸的干干净净。就此开启挖坑之旅。</p><p>首先想到的是选中文本读取为 html 格式，转换后再以 html 粘贴。碰到的第一个问题就是： <code>Pangu.js</code> 在 VisualEditor 下根本不起作用，而浏览器插件是可以的。研究源码发现问题出在 <code>spacingPageBody</code> 可用而 <code>spacingNode</code> 不可用。于是开始了无聊的逐句对比debug，找到根源在于 Xpath ：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">key: <span class="string">&quot;spacingNode&quot;</span>,</span><br><span class="line">  value: <span class="function"><span class="keyword">function</span> <span class="title">spacingNode</span>(<span class="params">contextNode</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> xPathQuery = <span class="string">&#x27;.//*/text()[normalize-space(.)]&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span> || contextNode.children &amp;&amp; contextNode.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// always TRUE!</span></span><br><span class="line">      xPathQuery = <span class="string">&#x27;.//text()[normalize-space(.)]&#x27;</span>;</span><br></pre></td></tr></table></figure><p>虽然不知道 <code>.//*/</code> 意义是什么，至少可以读取到 Node 中的内容了。然而这还不够，作者在核心代码里屏蔽掉了 textarea 和带  contentEditable 属性的内容（debug到吐）。所以：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">key: <span class="string">&quot;isContentEditable&quot;</span>,</span><br><span class="line">  value: <span class="function"><span class="keyword">function</span> <span class="title">isContentEditable</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span> &amp;&amp; node.isContentEditable || node.getAttribute &amp;&amp; node.getAttribute(<span class="string">&#x27;g_editable&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">    <span class="comment">// always FALSE!</span></span><br></pre></td></tr></table></figure><p>接下来就是获取选中 Node，然而又遇到另外一个问题，如果选取在段落边界，相邻的 element 可能会乱入。还有一个问题是如何保留格式再粘贴回来。所以暂时放弃这个办法，依赖 <code>Pangu.js</code> 自带的DOM操作逻辑直接修改原位格式化。之后就碰到了最郁闷的事：每次格式化段落之前要把光标点击到这个段落，否则再点回来就会自动还原。注意是点击，键盘移动或者 JS 模拟点击都不行。追踪还原事件发现这个写在 VE 的核心代码里，这样的话就不能全文批量格式化了。找了很多可能的解决办法，最后的决定是：妥协。回归最原始的方式：点击快捷键时通过 <code>getSelection</code> 函数获取光标或者选区所在的段落，执行格式化。主要代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;keydown&#x27;</span>,<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.ctrlKey&amp;&amp;e.shiftKey&amp;&amp;e.altKey)&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> sel = <span class="built_in">window</span>.getSelection();</span><br><span class="line">    <span class="keyword">var</span> pos = sel.getRangeAt(<span class="number">0</span>).commonAncestorContainer;</span><br><span class="line">    <span class="keyword">if</span> (pos.nodeType == <span class="number">3</span>) pos = pos.parentNode;</span><br><span class="line">    pos = pos.closest(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">    pangu.spacingNode(pos);</span><br><span class="line">    <span class="keyword">var</span> range = <span class="built_in">document</span>.createRange();</span><br><span class="line">      range.selectNodeContents(pos);</span><br><span class="line">      sel.removeAllRanges();</span><br><span class="line">      sel.addRange(range);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    mw.notify($( <span class="string">&#x27;&lt;span&gt;&lt;b&gt;Fail&lt;/b&gt; to format current section&lt;/span&gt;&#x27;</span>));</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">    mw.notify($( <span class="string">&#x27;&lt;span&gt;Success to format current section&lt;/span&gt;&#x27;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>另外，VE 有个插件系统，这个需求通过这个 Gadget 实现应该会更好些。然鹅研究了半天就逐渐失去耐心，主要原因还是找不到方法直接操作文本或者 DOM，只能做些简单的文本替换。这个先这样凑活着用，有时间再去折腾。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://gerrit.wikimedia.org/r/q/elastic">elastic · Gerrit Code Review (wikimedia.org)</a></p><p><a href="https://blog.imfing.com/2020/05/chinese-typesetting-space/#">中英文混排的“Social Distancing” - Fing’s Blog</a></p><p><a href="https://github.com/vinta/pangu.js">vinta/pangu.js: Paranoid text spacing in JavaScript (github.com)</a></p><p><a href="https://dev.fandom.com/wiki/MediaWiki:Pangu.js?action=edit">View source for MediaWiki:Pangu.js | Fandom Developers Wiki</a></p><p><a href="https://www.mediawiki.org/wiki/Adding_JavaScript_to_Wiki_Pages">Adding JavaScript to Wiki Pages - MediaWiki</a></p><p><a href="https://www.mediawiki.org/wiki/Bubble_notifications">Bubble notifications - MediaWiki</a></p><p><a href="https://www.cnblogs.com/ArthurPatten/p/3317263.html">javascript获取选中的文本/html - ArthurPatten - 博客园 (cnblogs.com)</a></p><p><a href="https://stackoverflow.com/questions/7781963/js-get-array-of-all-selected-nodes-in-contenteditable-div/7784176#7784176">javascript - JS: Get array of all selected nodes in contentEditable div - Stack Overflow</a></p><p><a href="https://stackoverflow.com/questions/5643635/how-to-get-selected-html-text-with-javascript">getselection - How to get selected html text with javascript? - Stack Overflow</a></p><p><a href="https://doc.wikimedia.org/VisualEditor/master/js/#!/api/ve">VisualEditor - Documentation</a></p><p><a href="https://www.mediawiki.org/wiki/VisualEditor/Gadgets">VisualEditor/Gadgets - MediaWiki</a></p>]]></content>
    
    
    <summary type="html">&lt;script type=&quot;text/javascript&quot; src=&quot;/attach/sm.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/attach/sm.css&quot;/&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;
&lt;form class=&quot;sm-banner&quot;&gt;
&lt;div&gt;
&lt;textarea id=&quot;typearea&quot; class=&quot;text&quot;&gt;&lt;/textarea&gt; 
&lt;br/&gt;
&lt;img data-src=&quot;/attach/tri.png&quot; alt=&quot;off&quot; id=&quot;img&quot;/&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/blockquote&gt;
&lt;script type=&quot;text/javascript&quot;&gt;type_text(new Array(
        &quot;&quot;,
        &quot;&quot;,
        &quot;&quot;,                
        &quot;中英文混排时 Space 很重要&quot;,
        &quot;不只是因为美观&quot;,
        &quot;还因为&quot;,
        &quot;对搜索引擎友好&quot;,
        &quot;&quot;,
        &quot;怎么做&quot;,
        &quot;插件可以帮忙&quot;,
        &quot;但更重要的是&quot;,
        &quot;习惯&quot;,
        &quot;&quot;,
        &quot;倡导盘古之白&quot;,
        &quot;让打字更愉悦&quot;,
        &quot;=^_^=&quot;
    ));&lt;/script&gt;</summary>
    
    
    
    <category term="原创" scheme="https://blog.zzbd.org/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
    <category term="设计" scheme="https://blog.zzbd.org/tags/%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="踩坑" scheme="https://blog.zzbd.org/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="wiki" scheme="https://blog.zzbd.org/tags/wiki/"/>
    
  </entry>
  
  <entry>
    <title>给wiki加个保险--自动备份MySQL</title>
    <link href="https://blog.zzbd.org/2021/10/20/db-backup/"/>
    <id>https://blog.zzbd.org/2021/10/20/db-backup/</id>
    <published>2021-10-20T09:10:31.000Z</published>
    <updated>2021-10-26T04:46:49.747Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://dict.zzbd.org/images/backup.png" alt="backup"></p><span id="more"></span><p>前不久搭建了一个wiki站，已经攒了不少内容放在上面。刚刚突然想到没有做备份，万一崩掉就损失惨重了。所以现在的需求是：给Mysql找个定时备份的工具。搜了下现成的轮子，backup.sh这个脚本比较合适，teddysun大神一直在维护中，bug比较少，而且也能同步到Onedrive上。</p><p>作者的教程写得很详细，照着操作就可以了，有个小坑在rclone的部署上，远程授权需要在本地机器上间接获取token，否则进行到<code>Waiting for code...</code>就卡住了。这一点作者在教程的后半部分有提到，然而是在死磕rclone的文档解决这个问题之后才看到的。最后就是设定下cron自动备份，搞定。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://teddysun.com/469.html">一键备份脚本backup.sh</a></p><p><a href="https://rclone.org/onedrive/">Microsoft OneDrive (rclone.org)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://dict.zzbd.org/images/backup.png&quot; alt=&quot;backup&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="原创" scheme="https://blog.zzbd.org/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
    <category term="生产力" scheme="https://blog.zzbd.org/tags/%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    <category term="wiki" scheme="https://blog.zzbd.org/tags/wiki/"/>
    
    <category term="教程" scheme="https://blog.zzbd.org/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Termscp--终端界面的多协议多平台文件传输管理</title>
    <link href="https://blog.zzbd.org/2021/09/25/termscp/"/>
    <id>https://blog.zzbd.org/2021/09/25/termscp/</id>
    <published>2021-09-25T09:10:31.000Z</published>
    <updated>2021-10-26T04:46:49.763Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://dict.zzbd.org/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210924114547.png" alt="微信截图_20210924114547"></p><span id="more"></span><blockquote><p>这篇教程来自<a href="https://github.com/veeso/termscp">termscp</a>官方文档，终于找到一个可以替代FileZilla/scp/rz/sz的工具了，用<a href="https://chocolatey.org/">choco</a>安装也很方便（我的win10居然已经预装了）。目前发现的槽点包括跳转比较慢，搜索巨慢，还有窗口太小会报错= =! 以下是本文余下内容是<strong>官方文档的中文版翻译</strong>。</p></blockquote><h1 id="操作指南-🎓"><a href="#操作指南-🎓" class="headerlink" title="操作指南 🎓"></a>操作指南 🎓</h1><ul><li><a href="#%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97-">操作指南 🎓</a><ul><li><a href="#%E7%94%A8%E6%B3%95">用法</a><ul><li><a href="#%E5%9C%B0%E5%9D%80%E5%8F%82%E6%95%B0">地址参数</a><ul><li><a href="#%E5%A6%82%E4%BD%95%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81">如何输入密码</a></li></ul></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88">文件浏览</a><ul><li><a href="#%E5%BF%AB%E6%8D%B7%E9%94%AE">快捷键</a></li><li><a href="#%E5%A4%84%E7%90%86%E5%A4%9A%E4%B8%AA%E6%96%87%E4%BB%B6">处理多个文件</a></li><li><a href="#%E5%90%8C%E6%AD%A5%E6%B5%8F%E8%A7%88">同步浏览</a></li><li><a href="#%E6%89%93%E5%BC%80%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F">打开/打开方式</a></li></ul></li><li><a href="#%E4%B9%A6%E7%AD%BE">书签</a><ul><li><a href="#%E6%88%91%E7%9A%84%E5%AF%86%E7%A0%81%E5%AE%89%E5%85%A8%E5%90%97">我的密码安全吗？</a><ul><li><a href="#linux-keyring">Linux Keyring</a><ul><li><a href="#keepassxc-setup-for-termscp">KeepassXC setup for termscp</a></li></ul></li></ul></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a><ul><li><a href="#ssh-key-storage">SSH Key Storage</a></li><li><a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E6%A0%BC%E5%BC%8F">资源管理器格式</a></li></ul></li><li><a href="#%E4%B8%BB%E9%A2%98">主题</a><ul><li><a href="#%E6%A0%B7%E5%BC%8F">样式</a><ul><li><a href="#%E7%99%BB%E5%BD%95%E9%A1%B5">登录页</a></li><li><a href="#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E9%A1%B5">文件传输页</a></li><li><a href="#misc">Misc</a></li></ul></li></ul></li><li><a href="#%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8">文本编辑器</a><ul><li><a href="#%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8">如何配置文本编辑器？</a></li></ul></li><li><a href="#%E6%97%A5%E5%BF%97">日志</a></li></ul></li></ul><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>termscp启动时可以使用以下选项:</p><p><code>termscp [options]... [protocol://user@address:port:wrkdir] [local-wrkdir]</code></p><ul><li><code>-P, --password &lt;password&gt;</code> 登陆密码</li><li><code>-c, --config</code> 打开termscp时打开配置页面</li><li><code>-q, --quiet</code> 禁用日志</li><li><code>-t, --theme &lt;path&gt;</code> 导入自定义主题</li><li><code>-v, --version</code> 打印版本信息</li><li><code>-h, --help</code> 打开帮助</li></ul><p>termscp有两种不同的启动模式，不带参数时，termscp将显示登录表单页，用户可以填写连接到远程服务端所需的参数。</p><p>或者，用户可以提供一个url作为参数，跳过认证页，直接与远程服务器进行连接。</p><p>如果提供了url参数，你也可以提供本地主机的起始工作目录。</p><p><img data-src="https://dict.zzbd.org/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210924112449.png" alt="微信截图_20210924112449"></p><h3 id="地址参数"><a href="#地址参数" class="headerlink" title="地址参数"></a>地址参数</h3><p>地址参数的格式如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[protocol://][username@]&lt;address&gt;[:port][:wrkdir]</span><br></pre></td></tr></table></figure><p>让我们通过一些例子熟悉这个特殊语法，它很好上手，你会很快习惯并且替代其他工具……</p><ul><li><p>使用默认协议（<em>在配置中定义</em>）连接到192.168.1.31，如果没有提供端口，则为所选协议的默认端口（取决于你的配置）；用户名是系统当前用户名</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termscp 192.168.1.31</span><br></pre></td></tr></table></figure></li><li><p>使用默认协议（<em>在配置中定义</em>）连接到192.168.1.31，用户名为<code>root</code></p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termscp root@192.168.1.31</span><br></pre></td></tr></table></figure></li><li><p>使用scp连接到192.168.1.31, 端口号为4022; 用户名为 <code>omar</code></p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termscp scp://omar@192.168.1.31:4022</span><br></pre></td></tr></table></figure></li><li><p>使用scp连接到192.168.1.31, 端口号为4022; 用户名为 <code>omar</code>。工作目录为 <code>/tmp</code></p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termscp scp://omar@192.168.1.31:4022:/tmp</span><br></pre></td></tr></table></figure></li></ul><h4 id="如何输入密码"><a href="#如何输入密码" class="headerlink" title="如何输入密码"></a>如何输入密码</h4><p>你可能已经注意到，url参数中没有办法直接附加密码，你可以通过以下三种方式提供密码：</p><ul><li><code>-P, --password</code> 不推荐：直接在参数中填写明文密码。强烈不推荐这种方法，因为它非常不安全（因为你可能会把密码保留在shell历史记录中）。</li><li>通过 <code>sshpass</code>: 你可以通过 <code>sshpass</code> 传入密码, 例如： <code>sshpass -f ~/.ssh/topsecret.key termscp cvisintin@192.168.1.31</code></li><li>提示输入密码：如果你不使用前面的任何方法，你会被提示输入密码，就像 <code>scp</code>、<code>ssh</code> 等比较经典的工具上一样。</li></ul><hr><h2 id="文件浏览"><a href="#文件浏览" class="headerlink" title="文件浏览"></a>文件浏览</h2><p>termscp中的文件资源管理器是指你与远程建立连接后可以看到的面板。<br>面板由3个部分组成（是的，就这三个）：</p><ul><li>本地资源管理器面板：它显示在你的屏幕左侧，显示localhost的当前目录文件列表。</li><li>远程资源管理器面板：它显示在你屏幕的右边，显示远程主机的当前目录文件列表。</li><li>Find results panel: depending on where you’re searching for files (local/remote) it will replace the local or the explorer panel. This panel shows the entries matching the search query you performed.查找结果面板：根据你搜索文件的位置（本地/远程），它将取代对应资源管理器面板。这个面板显示与你执行的搜索查询相匹配的条目。</li></ul><p>为了切换面板，你需要输入 <code>&lt;LEFT&gt;</code> 来移动远程资源管理器面板，<code>&lt;RIGHT&gt;</code> 来移动回本地资源管理器面板。当在查找结果面板时，你需要按<code>&lt;ESC&gt;</code>来退出面板，回到前一个面板。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><table><thead><tr><th>按键</th><th>命令</th><th>助记词</th></tr></thead><tbody><tr><td><code>&lt;ESC&gt;</code></td><td>断开远程连接；回到登录页</td><td></td></tr><tr><td><code>&lt;TAB&gt;</code></td><td>在日志面板和管理器面板之间切换</td><td></td></tr><tr><td><code>&lt;BACKSPACE&gt;</code></td><td>返回上一次目录</td><td></td></tr><tr><td><code>&lt;RIGHT&gt;</code></td><td>切换到远程管理器面板</td><td></td></tr><tr><td><code>&lt;LEFT&gt;</code></td><td>切换到本地管理器面板</td><td></td></tr><tr><td><code>&lt;UP&gt;</code></td><td>在当前列表中向上移动光标</td><td></td></tr><tr><td><code>&lt;DOWN&gt;</code></td><td>在当前列表中向下移动光标</td><td></td></tr><tr><td><code>&lt;PGUP&gt;</code></td><td>在当前列表中光标上移8行</td><td></td></tr><tr><td><code>&lt;PGDOWN&gt;</code></td><td>在当前列表中光标下移8行</td><td></td></tr><tr><td><code>&lt;ENTER&gt;</code></td><td>进入文件夹</td><td></td></tr><tr><td><code>&lt;SPACE&gt;</code></td><td>上传 / 下载选中文件</td><td></td></tr><tr><td><code>&lt;A&gt;</code></td><td>是否显示隐藏文件</td><td>All</td></tr><tr><td><code>&lt;B&gt;</code></td><td>按..排序</td><td>Bubblesort?</td></tr><tr><td><code>&lt;C&gt;</code></td><td>复制文件（夹）</td><td>Copy</td></tr><tr><td><code>&lt;D&gt;</code></td><td>创建文件夹</td><td>Directory</td></tr><tr><td><code>&lt;E&gt;</code></td><td>删除文件（同 <code>DEL</code>）</td><td>Erase</td></tr><tr><td><code>&lt;F&gt;</code></td><td>文件搜索 (支持通配符)</td><td>Find</td></tr><tr><td><code>&lt;G&gt;</code></td><td>跳转到指定路径</td><td>Go to</td></tr><tr><td><code>&lt;H&gt;</code></td><td>显示帮助</td><td>Help</td></tr><tr><td><code>&lt;I&gt;</code></td><td>显示选中文件（夹）信息</td><td>Info</td></tr><tr><td><code>&lt;L&gt;</code></td><td>刷新当前目录列表 / 清除选中状态</td><td>List</td></tr><tr><td><code>&lt;M&gt;</code></td><td>选中文件</td><td>Mark</td></tr><tr><td><code>&lt;N&gt;</code></td><td>使用键入的名称新建文件</td><td>New</td></tr><tr><td><code>&lt;O&gt;</code></td><td>编辑文件；参考文本编辑器文档</td><td>Open</td></tr><tr><td><code>&lt;Q&gt;</code></td><td>退出termscp</td><td>Quit</td></tr><tr><td><code>&lt;R&gt;</code></td><td>重命名文件</td><td>Rename</td></tr><tr><td><code>&lt;S&gt;</code></td><td>另存为…</td><td>Save</td></tr><tr><td><code>&lt;U&gt;</code></td><td>进入上层目录</td><td>Upper</td></tr><tr><td><code>&lt;V&gt;</code></td><td>使用默认方式打开文件</td><td>View</td></tr><tr><td><code>&lt;W&gt;</code></td><td>使用指定程序打开文件</td><td>With</td></tr><tr><td><code>&lt;X&gt;</code></td><td>运行命令</td><td>eXecute</td></tr><tr><td><code>&lt;Y&gt;</code></td><td>是否开启同步浏览</td><td>sYnc</td></tr><tr><td><code>&lt;DEL&gt;</code></td><td>删除文件</td><td></td></tr><tr><td><code>&lt;CTRL+A&gt;</code></td><td>选中所有文件</td><td></td></tr><tr><td><code>&lt;CTRL+C&gt;</code></td><td>终止文件传输</td><td></td></tr></tbody></table><h3 id="处理多个文件"><a href="#处理多个文件" class="headerlink" title="处理多个文件"></a>处理多个文件</h3><p>你可以同时操作多个文件，按<code>&lt;M&gt;</code>选定它们，或者按<code>&lt;CTRL+A&gt;</code> 全选当前工作目录中的所有文件。一旦一个文件被标记为选择，它将在左边显示一个 <code>*</code>。在这种模式下，只有选定的文件会被处理，而当前光标高亮显示的项目会被忽略。在查找结果面板中，也可以对多个文件进行处理。<br>在处理多个文件时，所有的操作都是可用的，但请注意，有些操作的工作方式略有不同。让我们深入了解一下：</p><ul><li><em>复制</em>: 当你复制一个文件时，你会被提示输入完整目标路径名。当处理多个文件时，这个名称指的是所有这些文件将被复制到的目标目录。</li><li><em>重命名</em>: 和复制操作类似, 但是会移动文件到目标路径。</li><li><em>保存为</em>: 和复制操作类似, 但是会写入文件到目标路径。</li></ul><h3 id="同步浏览"><a href="#同步浏览" class="headerlink" title="同步浏览"></a>同步浏览</h3><p>启用时，同步浏览将允许你在两个面板之间同步导航操作。这意味着，每当你在一个面板上改变工作目录时，同样的动作会在另一个面板上重现。如果你想启用同步浏览，只需按下<code>&lt;Y&gt;</code>；按两次就可以禁用。当启用时，同步浏览的状态将在状态栏上显示为<code>ON</code>。</p><p><em>警告</em>：目前，每当你试图访问一个不存在的目录，你不会被提示创建它。这点可能会在未来的更新中改进。</p><h3 id="打开-打开方式"><a href="#打开-打开方式" class="headerlink" title="打开/打开方式"></a>打开/打开方式</h3><p>打开和打开方式的功能是由[open-rs]（<a href="https://docs.rs/crate/open/1.7.0%EF%BC%89%E6%8F%90%E4%BE%9B%E7%9A%84%E3%80%82">https://docs.rs/crate/open/1.7.0）提供的。</a><br>执行视图命令（<code>&lt;V&gt;</code>）时，关联该文件类型的系统默认应用程序会被调用以打开当前文件。这依赖于操作系统默认的服务，所以要确保你的系统中至少安装了一个这样的服务：</p><ul><li><strong>Windows</strong> 用户: 无需额外操作，程序内部会调用 <code>start</code> 命令。</li><li><strong>MacOS</strong> 用户: 同样无需额外操作，程序内部会调用系统内置的 <code>open</code> 命令。</li><li><strong>Linux</strong> 用户: 以下程序之一需要被安装：<ul><li><em>xdg-open</em></li><li><em>gio</em></li><li><em>gnome-open</em></li><li><em>kde-open</em></li></ul></li><li><strong>WSL</strong> 用户: <em>wslview</em> 是必要的，你需要安装 <a href="https://github.com/wslutilities/wslu">wslu</a>.</li></ul><blockquote><p>Q: 我可以使用V命令编辑远程文件吗？<br>A: 不可以，至少不能在 “远程管理面板 “上直接操作。你必须先把它下载到本地目录，这是由于当你打开一个远程文件时，该文件会被下载到一个临时目录中，但没有办法监控这个文件的状态，同时也无法得知你用来打开它的程序何时被关闭。也就是说，termscp无法获知你何时完成对该文件的编辑。</p></blockquote><hr><h2 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h2><p>在termscp中，你可以保存常用的服务器，随后可以从termscp的主界面中快速连接到这些服务器。termscp也会在历史记录中保存你最后连接的16个主机。这个功能保留了连接到某个远程服务器的所有参数，只需在登录页下方的Tab中选中书签即可。</p><p>书签会尝试被保存在以下路径：</p><ul><li><code>$HOME/.config/termscp/</code> – Linux/BSD</li><li><code>$HOME/Library/Application Support/termscp</code> – MacOs</li><li><code>FOLDERID_RoamingAppData\termscp\</code> – Windows</li></ul><p>对于书签（不包括服务器连接历史记录）而言，也可以保存用于验证的密码。注意默认情况下不保存密码，必须在保存新书签时通过提示指定密码。</p><blockquote><p>我对在termscp中存储密码的做法非常持保留意见。原因是什么？在你的电脑上保存密码可能会让黑客进入你所注册的任何服务器。但我必须承认，对许多机器来说，每次都输入密码真的很无聊，而且很多时候我必须与局域网内的机器一起工作，这对攻击者来说没有任何好处，所以我想出了一个折衷办法来处理密码。</p></blockquote><p>我强烈建议你遵循这些原则，以决定你是否应该本地保存密码：</p><ul><li><strong>绝对不要</strong> 在连接公网的机器上本地保存密码，只可以在局域网机器上这么做</li><li>确保你的机器有网络保护措施。可以的话，对你的磁盘进行加密，并且在你离开时锁定你的电脑。</li><li>最好是在确保目标机器不易受影响的情况下才保存密码。</li></ul><p>请按照以下步骤新建书签：</p><ol><li>在认证页中输入待连接服务器的参数</li><li>按 <code>&lt;CTRL+S&gt;</code></li><li>输入书签名称</li><li>选择是否保留密码</li><li>按 <code>&lt;ENTER&gt;</code> 提交</li></ol><p>无论何时你想使用以前保存的连接，只需按下<code>&lt;TAB&gt;</code>导航到书签列表，然后按<code>&lt;ENTER&gt;</code>将书签参数加载到表格中。</p><p><img data-src="https://dict.zzbd.org/images/bookmarks.gif" alt="bookmarks"></p><h3 id="我的密码安全吗？"><a href="#我的密码安全吗？" class="headerlink" title="我的密码安全吗？"></a>我的密码安全吗？</h3><p>这是当然 😉。<br>如前所述，书签与密码一起保存在你的配置目录中。密码显然不是纯文本，它们是用<strong>AES-128</strong>加密的。这够不够安全？绝对够 (BSD和WSL用户除外😢)</p><p>在<strong>Windows</strong>、<strong>Linux</strong>和<strong>MacOS</strong>上，如果可能的话（但应该是），密码会被分别存储在<em>Windows Vault</em>、<em>系统钥匙串</em>和<em>Keychain</em>中。这实际上是超级安全的，并且是由你的操作系统直接管理的。</p><p>❗请注意，如果你是一个Linux用户，你真的应该阅读<a href="#linux-keyring">下面的章节👀</a>，因为你的系统可能没有启用或支持钥匙串功能</p><p>另一方面，在<em>BSD</em>和<em>WSL</em>上，用于加密密码的密钥是存储在你的驱动器上的（在$HOME/.config/termscp）。那么，仍然有可能检索到密钥来解密密码。幸运的是，密钥的位置保证了你的密钥不能被与你不同的用户读取，但是，是的，我仍然不会为暴露在互联网上的服务器保存密码😉。</p><h4 id="Linux-Keyring"><a href="#Linux-Keyring" class="headerlink" title="Linux Keyring"></a>Linux Keyring</h4><p>我们都喜欢Linux，因为它给了用户自由。作为一个Linux用户，你基本上可以做任何你想做的事情，但这也有一些缺点，比如说，不同的发行版之间往往没有标准的应用程序。这也涉及到钥匙串。<br>这意味着，在Linux上，你的系统可能没有安装钥匙串。不幸的是，我们用来处理钥匙存储的库需要一个在D-BUS上公开<code>org.freedesktop.secrets</code>的服务，而最糟糕的事实是，只有两个服务在公开它。</p><ul><li>❗ 如果你使用GNOME作为桌面环境（例如ubuntu用户），那么你是幸运的，因为钥匙串已经由<code>gnome-keyring</code>提供，一切都应该已经准备就绪了。</li><li>❗对于其他桌面环境的用户，有一个很好的程序，你可以用它来获得钥匙串，这就是<a href="https://keepassxc.org/">KeepassXC</a>，我在我的Manjaro中使用它（带KDE），一切都很正常。唯一的问题是，你必须设置它与termscp一起使用（但这很简单）。要开始使用KeepassXC，请阅读更多[这里]（#keepassxc-setup-for-termscp）。</li><li>❗如果你不想安装任何这些服务呢？好吧，这没有问题! <strong>termscp依然能正常工作</strong>，但它会将密钥保存在一个文件中，就像它通常为BSD和WSL做的那样。</li></ul><h5 id="KeepassXC-setup-for-termscp"><a href="#KeepassXC-setup-for-termscp" class="headerlink" title="KeepassXC setup for termscp"></a>KeepassXC setup for termscp</h5><p>参照以下步骤，为termscp配置keepassXC：</p><ol><li>安装KeepassXC</li><li>进入工具栏的 “工具”&gt;”设置”。</li><li>选择 “秘密服务集成 “并切换 “启用KeepassXC freedesktop.org secret服务集成”</li><li>创建一个数据库，如果你还没有：在工具栏的 “数据库”&gt;”新数据库”</li><li>从工具条上 “数据库” &gt; “数据库设置”</li><li>选择 “secret服务集成 “并切换 “在此组下暴露条目”</li><li>7.在列表中选择你希望termscp secret保存到的组。记住，这个组可能被任何其他应用程序通过DBUS存储密钥。</li></ol><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>termscp支持一些用户定义参数，这些参数可以通过配置来修改。<br>termscp有一个TOML文件和一些其他的目录，所有的参数都会被保存在这些目录中，但是不用担心，你不必手动编辑这些文件，因为我为termscp制作了可交互的用户界面。</p><p>termscp和书签一样，只需要保证这些路径是可访问的：</p><ul><li><code>$HOME/.config/termscp/</code> – Linux/BSD</li><li><code>$HOME/Library/Application Support/termscp</code> – MacOs</li><li><code>FOLDERID_RoamingAppData\termscp\</code> – Windows</li></ul><p>要访问配置，你只需在termscp的主界面上按<code>&lt;CTRL+C&gt;</code>。</p><p>这些参数可以自定义：</p><ul><li><strong>Text Editor</strong>：使用的文本编辑器。默认情况下，termscp将为你找到默认的编辑器；通过这个选项，你可以强制使用一个编辑器（如<code>vim</code>）。<strong>也支持GUI编辑器</strong>，除非它们从父进程中<code>nohup</code>。所以，如果这是你的问题：是的，你可以使用<code>notepad.exe</code>，然而，<strong>Visual Studio Code不工作</strong>。</li><li><strong>Default Protocol</strong>：默认协议是termscp中默认使用的文件传输协议。这适用于登录页和地址中的CLI参数。</li><li><strong>Show Hidden Files</strong>：选择是否应默认显示隐藏文件。你可以在运行时按 <code>A</code> 来切换是否显示隐藏的文件。</li><li><strong>Check for updates</strong>：如果设置为 <code>yes</code>，termscp将通过Github API检查是否有新版本的termscp。</li><li><strong>Group Dirs</strong>：选择在文件浏览器中是否对文件夹进行分组。如果选择 <code>Display first</code>，目录将根据设置的方法排序，但仍显示在文件之前；如果选择 <code>Display last</code>，则正好相反。</li><li><strong>Remote File formatter syntax</strong>：在远程资源管理器中为每个文件显示文件信息的语法。参见<a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E6%A0%BC%E5%BC%8F">资源管理器格式</a></li><li><strong>Local File formatter syntax</strong>：在本地资源管理器中显示每个文件的文件信息的语法。参见<a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E6%A0%BC%E5%BC%8F">资源管理器格式</a></li></ul><h3 id="SSH-Key-Storage"><a href="#SSH-Key-Storage" class="headerlink" title="SSH Key Storage"></a>SSH Key Storage</h3><p>配置选项还包括termscp为<strong>SFTP/SCP客户端</strong>提供的一个<strong>必要</strong>功能：SSH密钥存储。</p><p>你可以从配置中切换到到 <code>SSH Keys</code> tab页来访问SSH密钥存储，在那里你可以：</p><ul><li><strong>Add a new key</strong>：只需按下<code>&lt;CTRL+N&gt;</code>，你将被提示创建一个新的密钥。提供主机名/ip地址和与该钥匙关联的用户名，最后会打开一个文本编辑器：将<strong>PRIVATE</strong> SSH key粘贴到文本编辑器中，保存并退出。</li><li><strong>Remove an existing key</strong>：只要在你想删除的密钥上按下<code>&lt;DEL&gt;</code>或<code>&lt;CTRL+E&gt;</code>，就可以从 termscp 中永久删除该密钥。</li><li><strong>Edit an existing key</strong>：只需在你想编辑的密钥上按下<code>&lt;ENTER&gt;</code>，就可以修改私钥。</li></ul><blockquote><p>问：等等，我的私钥受密码保护，也是可以用的吗？<br>答：当然可以。termscp中提供的认证密码，对用户名/密码认证和RSA密钥认证都有效。</p></blockquote><h3 id="资源管理器格式"><a href="#资源管理器格式" class="headerlink" title="资源管理器格式"></a>资源管理器格式</h3><p>可以为文件浏览器配置自定义的格式，本地和远程主机允许进行单独设定，所以你可以使用两种不同的语法。这些字段的名称为 <code>File formatter syntax (local)</code> 和 <code>File formatter syntax (remote)</code>，将定义文件条目如何在文件资源管理器中显示。<br>格式化的语法如下 <code>&#123;KEY1&#125;... &#123;KEY2:LENGTH&#125;... &#123;KEY3:LENGTH:EXTRA&#125; &#123;KEYn&#125;...</code>。<br>花括号内的每个键将被替换成相关的属性，而括号外的所有内容将保持不变。</p><ul><li>键名是固定的，必须是下面的关键字之一</li><li>长度指定了为显示该字段而保留的长度。静态属性不支持这个参数（GROUP、PEX、SIZE、USER）。</li><li>Extra只被一些特定字段支持，也是可选的。请看各字段详细描述来判断是否支持Extra参数。</li></ul><p>以下是自定义格式支持的键名：</p><ul><li><code>ATIME</code>: 最后访问时间（默认语法为<code>%b %d %Y %H:%M</code>）；Extra参数可以指定时间显示语法（例如：<code>&#123;ATIME:8:%H:%M&#125;</code>）</li><li><code>CTIME</code>: 创建时间（语法为<code>%b %d %Y %H:%M</code>）；Extra参数可以指定时间显示语法（例如：<code>&#123;CTIME:8:%H:%M&#125;</code>）</li><li><code>GROUP</code>: 所属组</li><li><code>MTIME</code>: 最后修改时间（语法为<code>%b %d %Y %H:%M</code>）；Extra参数可以指定时间显示语法（例如：<code>&#123;MTIME:8:%H:%M&#125;</code>）</li><li><code>NAME</code>: 文件名（超过24个字符的部分会被省略）</li><li><code>PEX</code>: 文件权限（UNIX格式）</li><li><code>SIZE</code>: 文件大小（目录不显示）</li><li><code>SYMLINK</code>: 超链接（如果存在的话<code>-&gt; &#123;FILE_PATH&#125;</code>）。</li><li><code>USER</code>: 所属用户</li></ul><p>如果留空，将使用默认的格式化语法。<code>&#123;NAME:24&#125; &#123;PEX&#125; &#123;USER&#125; &#123;SIZE&#125; &#123;MTIME:17:%b %d %Y %H:%M&#125;</code>。</p><hr><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>Termscp为你提供了一个很棒的功能：可以为应用程序中的几个组件配置颜色。<br>如果你想自定义termscp，有两种可用的途径：</p><ul><li>从<strong>配置菜单</strong></li><li>导入一个<strong>配置文件</strong></li></ul><p>为了从termscp创建你的私人定制，你所要做的就是从auth活动页进入配置，按<code>&lt;CTRL+C&gt;</code>，然后<code>&lt;TAB&gt;</code>两次。你现在应该已经移到了 <code>themes</code> 面板。</p><p>在这里你可以用<code>&lt;UP&gt;</code>和<code>&lt;DOWN&gt;</code>移动来选择你想改变的样式，如下图所示：</p><p><img data-src="https://dict.zzbd.org/images/themes.gif" alt="themes"></p><p>termscp支持传统的十六进制（<code>#rrggbb</code>）和RGB<code>rgb(r, g, b)</code>语法来表示颜色，但也接受 **<a href="https://www.w3schools.com/cssref/css_colors.asp">css颜色</a>**（如<code>crimson</code>）😉。还有一个特殊的关键词是<code>Default</code>，意味着使用的颜色将是基于情景的默认前景或背景颜色（文本和线条的前景色，以及容器的背景色，你猜是什么）。</p><p>如前所述，你也可以导入主题文件。你可以从themscp提供的主题中获取灵感或直接使用其中的一个，位于这个代码仓库的<code>themes/</code>目录下，运行themscp以导入它们 <code>termscp -t &lt;theme_file&gt;</code>。最后，如果一切正常，它应该提示你主题已经成功导入。</p><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p>你可以在下面的表格中找到每个样式字段的描述。<br>请注意，<strong>样式在配置页面不起作用</strong>，以保证它总是可以访问，以防你把一切都弄乱了。</p><h4 id="登录页"><a href="#登录页" class="headerlink" title="登录页"></a>登录页</h4><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>auth_address</td><td>IP地址输入框的颜色</td></tr><tr><td>auth_bookmarks</td><td>书签面板的颜色</td></tr><tr><td>auth_password</td><td>密码输入框的颜色</td></tr><tr><td>auth_port</td><td>端口输入框的颜色</td></tr><tr><td>auth_protocol</td><td>协议选项组的颜色</td></tr><tr><td>auth_recents</td><td>历史记录面板的颜色</td></tr><tr><td>auth_username</td><td>用户名输入框的颜色</td></tr></tbody></table><h4 id="文件传输页"><a href="#文件传输页" class="headerlink" title="文件传输页"></a>文件传输页</h4><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>transfer_local_explorer_background</td><td>本地资源浏览器的背景色</td></tr><tr><td>transfer_local_explorer_foreground</td><td>本地资源浏览器的前景色</td></tr><tr><td>transfer_local_explorer_highlighted</td><td>本地资源浏览器的边框和高亮色</td></tr><tr><td>transfer_remote_explorer_background</td><td>远程资源浏览器的背景色</td></tr><tr><td>transfer_remote_explorer_foreground</td><td>远程资源浏览器的前景色</td></tr><tr><td>transfer_remote_explorer_highlighted</td><td>远程资源浏览器的边框和高亮色</td></tr><tr><td>transfer_log_background</td><td>日志面板的背景色</td></tr><tr><td>transfer_log_window</td><td>日志面板的窗口颜色</td></tr><tr><td>transfer_progress_bar_partial</td><td>进度条完成部分颜色</td></tr><tr><td>transfer_progress_bar_total</td><td>进度条背景色颜色</td></tr><tr><td>transfer_status_hidden</td><td>状态栏 “hidden” 标签的颜色</td></tr><tr><td>transfer_status_sorting</td><td>状态栏 “sorting” 标签的颜色；同时适用于文件排序对话框</td></tr><tr><td>transfer_status_sync_browsing</td><td>状态栏 “sync browsing” 标签的颜色</td></tr></tbody></table><h4 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h4><p>以下这些样式会在程序不同的位置起作用：</p><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>misc_error_dialog</td><td>报错信息的颜色</td></tr><tr><td>misc_input_dialog</td><td>输入对话框的颜色（比如拷贝文件时）</td></tr><tr><td>misc_keys</td><td>键盘输入文字的颜色</td></tr><tr><td>misc_quit_dialog</td><td>退出窗口的颜色</td></tr><tr><td>misc_save_dialog</td><td>保存窗口的颜色</td></tr><tr><td>misc_warn_dialog</td><td>警告窗口的颜色</td></tr></tbody></table><hr><h2 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h2><p>Termscp有很多功能，你可能已经注意到了，其中之一就是可以查看和编辑文本文件。不管文件是在本地主机还是在远程主机上，termscp都提供了在你喜欢的文本编辑器中打开文件的功能。<br>如果文件位于远程主机上，该文件将首先被下载到你的临时文件目录中，然后，<strong>只有</strong>在对该文件进行了修改的情况下，才会重新上传至远程主机上。</p><p>多说一句，<strong>你只能编辑文本文件</strong>；二进制文件是不可以的。</p><h3 id="如何配置文本编辑器？"><a href="#如何配置文本编辑器？" class="headerlink" title="如何配置文本编辑器？"></a>如何配置文本编辑器？</h3><p>文本编辑器是通过<a href="https://github.com/milkey-mouse/edit">awesome crate</a>自动查找的，如果你想改变默认的文本编辑器，请在termscp配置中改变它。<a href="#%E9%85%8D%E7%BD%AE">阅读更多</a></p><hr><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>termscp会为每个会话创建一个日志文件，该文件在</p><ul><li><code>$HOME/.config/termscp/termscp.log</code> – Linux/BSD</li><li><code>$HOME/Library/Application Support/termscp/termscp.log</code> – MacOs</li><li><code>FOLDERID_RoamingAppData\termscp\termscp.log</code> – Windows</li></ul><p>日志不会滚动，只是在每次启动 termscp 后被截断，所以如果你想报告一个问题并想附上你的日志文件，再次启动 termscp 之前请先将日志文件保存在一个安全的地方。日志文件总是以<em>trace</em>级别报告，所以它有点冗长。我知道你可能有一些关于日志文件的问题，所以我做了一个Q/A：</p><blockquote><p>有没有可能降低日志级别？</p></blockquote><p>不可以，原因很简单：当一个问题发生时，你必须能够知道是什么原因造成的，而唯一的办法就是在日志文件中设置记录最多的细节。</p><blockquote><p>如果日志级别设置为trace，会产生很大的文件吗？</p></blockquote><p>应该不会，除非你从不退出termscp，但我认为这很可能发生。一个长的会话可能会产生高达10MB的日志文件（我说的是一个长的会话），但我认为一个正常的会话不会超过2MB。</p><blockquote><p>我不希望有日志记录，我可以把它关掉吗？</p></blockquote><p>可以的。只要用<code>-q or --quiet</code>选项启动termscp。你可以用别名来启动termscp从而使这个选项一直生效。记住，日志是用来诊断故障的，所以在每个开源项目的背后，都应该有这样的互动反馈，保留日志文件可能是你支持项目的途径😉。我不想让你感到内疚，只是想提一句。</p><blockquote><p>日志是安全的吗？</p></blockquote><p>如果你担心安全问题，日志文件不包含任何普通的密码，所以不用担心，它暴露的信息与同级文件 <code>书签</code> 报告的信息相同。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://dict.zzbd.org/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210924114547.png&quot; alt=&quot;微信截图_20210924114547&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="翻译" scheme="https://blog.zzbd.org/categories/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="小工具" scheme="https://blog.zzbd.org/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="教程" scheme="https://blog.zzbd.org/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="terminal" scheme="https://blog.zzbd.org/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>mediaWiki高级用法：TemplateData和Cargo</title>
    <link href="https://blog.zzbd.org/2021/09/03/mediawiki4/"/>
    <id>https://blog.zzbd.org/2021/09/03/mediawiki4/</id>
    <published>2021-09-03T03:46:50.000Z</published>
    <updated>2021-10-26T04:46:49.751Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://dict.zzbd.org/images/mw-cover.png" alt="mw-cover"></p><span id="more"></span><p>不得不说mediawiki用来收集整理资料真的非常合适，除了后端需要PHP环境这一个缺点，几乎挑不出什么毛病，无论自用还是团队协作都很好上手。除了最基本的纯文本编辑，模板功能也是一大亮点。最近在阶段性地收集公众号文章，借助Cargo和TemplateData可以实现一个很cool的功能：每个条目按照预设的表单录入。这样既保证了录入效率和完整性，也方便后续查找。</p><p>用了一段时间发现一个小问题：每次用模板录入的时候只能手动输入文本，TemplateData不支持多选或者时间选择器。一番搜索，发现最新的TemplateData插件已经在开发版加入了这个功能，同时还需要更新VisualEditor。试着手动替换最新版插件，编辑模板时新增了建议值一栏，然而启动VE时却被告知master分支现在只支持1.37版本的Mediawiki。</p><p><img data-src="https://dict.zzbd.org/images/mw1.png" alt="mw1"></p><p>纠结了半天，无奈下拉栏诱惑力实在太强，还是下狠心来个大更新。官网提供了两种安装开发版的方式，下载压缩包直接覆盖或者git拉取。考虑到可能要测试不同的低版本，还是选择了后者。因为是从最近的1.36升上去，需要改动的地方并不多，按照文档一步一步操作。首先扫一眼Release Note，然后是UPGRADE文件。要注意以下几点：</p><ol><li><p>不要直接拉mediawiki全仓库，过程会慢的你想哭，我们只需要主分支和最新几个commit。拉取完先更新下子模块，此外还需要composer。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 3 --branch master https://gerrit.wikimedia.org/r/mediawiki/core.git public</span><br><span class="line"><span class="built_in">cd</span> public</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"><span class="comment">## 更新php插件</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">curl -sS https://getcomposer.org/installer -o composer-setup.php</span><br><span class="line">php composer-setup.php --install-dir=/usr/<span class="built_in">local</span>/bin --filename=composer</span><br><span class="line"><span class="built_in">cd</span> public</span><br><span class="line">composer update --no-dev</span><br></pre></td></tr></table></figure></li><li><p>除了VE之外的所有插件文件夹中的内容都复制过来，然后是皮肤文件夹，<code>LocalSettings.php</code>文件。对于VE我们从git拉取。images文件夹复制过来后需要改下文件权限<code>chown -R www-data:www-data images</code>，最后去maintenance文件夹运行更新<code>php update.php</code></p></li><li><p>Timeless皮肤似乎有些不兼容，nginx一直记录warning，所以替换为git拉取的开发版。</p></li><li><p>VE拉取完之后还有一个步骤，更新子模块：<code>git submodule update --init</code></p></li><li><p>会出现各种奇奇怪怪的问题，比如前端报错，VE报错，总之一通重启，逐个排除，终于跑通了流程</p></li></ol><p><img data-src="https://dict.zzbd.org/images/mw2.png" alt="mw2"></p><p>很可惜还是TemplateData还是不支持Time picker等高级组件，不过也可以用下拉框曲线救国，预设成类似<code>2021-09-</code>这种，然后手动加上日份，机智如我~</p><p><strong>9.13更新</strong></p><p>事情比我想象的还是要复杂些，通过上述操作，只有当vitrualEditor可用的时候，页面没有刷新，切换到VE的master分支并原地刷新页面才能看到上面的截图，只要关闭页面重开或者点到其他页面再返回，VE就会报错<code>Error contacting the Parsoid/RESTBase server (HTTP 404)</code>。就这个问题又纠结了好久，各种方法试遍了都没用，只有切换回<code>REL1_36</code>才能顺利打开VE，然而这样的话多选框就没有了，白折腾。为了VE不至于废掉，只能很不爽地切换回旧版。</p><p>今天无意中瞟了一眼VE的安装文档，无意中发现这样一句话”You must follow the instructions on the Parsoid page to configure Parsoid if you are installing VisualEditor from git”，原文还加粗显示了，然鹅一直被我忽略。。。顺着文档拉取parsoid（我放在了extensions文件夹，<strong>注意填绝对路径</strong>），在<code>LocalSettings.php</code>中做好相应配置，检查nginx配置（居然已经填好了rest.php的规则，之前复制粘贴没有去琢磨每条规则的作用），VE切换回master分支，运行。多选框又回来了！尝试切换页面，一切正常。</p><p>所以这件事告诉我们：仔细读文档是多么重要~~</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://phabricator.wikimedia.org/T53375">⚓ T53375 TemplateData: Add parameter type for selecting one of predefined values (like “” or ENUM) (wikimedia.org)</a></p><p><a href="https://www.mediawiki.org/wiki/Download_from_Git">Download from Git - MediaWiki</a></p><p><a href="https://gerrit.wikimedia.org/g/mediawiki/core/%2B/HEAD/">/ - mediawiki/core - Gitiles (wikimedia.org)</a></p><p><a href="https://www.mediawiki.org/wiki/Extension:VisualEditor#If_you_are_using_Git">Extension:VisualEditor - MediaWiki</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://dict.zzbd.org/images/mw-cover.png&quot; alt=&quot;mw-cover&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="原创" scheme="https://blog.zzbd.org/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
    <category term="踩坑" scheme="https://blog.zzbd.org/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="wiki" scheme="https://blog.zzbd.org/tags/wiki/"/>
    
  </entry>
  
  <entry>
    <title>mediaWiki和CirrusSearch的中场故事</title>
    <link href="https://blog.zzbd.org/2021/08/17/mediawiki3/"/>
    <id>https://blog.zzbd.org/2021/08/17/mediawiki3/</id>
    <published>2021-08-17T07:46:50.000Z</published>
    <updated>2021-10-26T04:46:49.751Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://dict.zzbd.org/images/image-20210817174558053.png" alt="image-20210817174558053"></p><span id="more"></span><p>最近把mediawiki装到了小VPS上，先用IP访问着还算正常，偶尔会抽风无法访问（丢包太狠啊，我也想上搬瓦工啊），后续想办法弄到备案的子域名就可以用CDN加速了。看到有高级搜索功能，犹豫半天还是没忍住开始折腾。</p><p>根据网友提供的经验，1c1g的菜服貌似也可以拉得动elasticsearch。顺利装好两个插件，然后是elasticsearch。准备仔细看网友是如何解决内存不足问题的时候，恍然发现自己已经掉坑里了：</p><p>最新的7.14版本是可以跑在1g内存上了，然而当前的CirrusSearch并不兼容</p><p>如果要降级到6.x要考虑残留不说，内存也可能会爆，或者被迫忍受长时间的无响应</p><p>简直就是顺着作者描述的坑在踩一遍。这个事情告诉我们：踩坑需谨慎，看完帖子再动手。</p><p>然而并不想就此放弃。很惊喜的在CirrusSearch代码仓库发现这样一条commit message：</p><blockquote><p>[WIP] Upgrade to elasticsearch 6.8.18 <strong>To prepare for elastic 7 we need to get everything up to the latest release of 6</strong>, which produces all the necessary deprecation messages. Mostly untested, it only passes the test suite.</p></blockquote><p>看到画粗线的地方没有？维护人员一直在努力适配新版！这条信息发布日期是8月11号，所以还是可以期待一下的。开源社区YYDS，奥力给~~</p><p>那么就放到这里，等兼容之后再继续折腾吧。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.chenguanghe.com/mediawiki-elasticsearch/">Mediawiki + Elasticsearch | 书脊 (chenguanghe.com)</a></p><p>[<a href="https://gerrit.wikimedia.org/r/c/search/extra/+/711226">WIP] Upgrade to elasticsearch 6.8.18 (I2432c2f4) · Gerrit Code Review (wikimedia.org)</a></p><p><a href="https://zhuanlan.zhihu.com/p/159595952">为MediaWiki安装高级搜索（AdvancedSearch）插件 - 知乎 (zhihu.com)</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html">Install Elasticsearch with Debian Package | Elasticsearch Guide 7.14 | Elastic</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;https://dict.zzbd.org/images/image-20210817174558053.png&quot; alt=&quot;image-20210817174558053&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="原创" scheme="https://blog.zzbd.org/categories/%E5%8E%9F%E5%88%9B/"/>
    
    
    <category term="踩坑" scheme="https://blog.zzbd.org/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="wiki" scheme="https://blog.zzbd.org/tags/wiki/"/>
    
  </entry>
  
</feed>
